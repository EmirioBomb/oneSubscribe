enum nodeType {
  SS,
  SSR,
  V2RAY
}

input SSR {
  title: String!
  host: String!
  method: String!
  flag: String
  obfs: String!
  obfsParam: String!
  proto: String!
  protoParam: String!
  port: Int!
  password: String!
}

type Subscribe {
  name: String
  nodesList: [SSR]
  urlKey: String
}

type User {
  id: ID!
  username: String!
  encryptedPassword: String
}

type loginUser {
  id: ID!
  username: String!
  jwt: String
}

type Code {
  id: ID!
  code: Int
}

type Message {
  TF: Boolean!
  Message: String
}

type Query {
  users: [User]
  jwt: loginUser
  # Todo
  nodesList: [SSR] 
  SubscribeList: [Subscribe]
}

type Mutation {
    signin(username: String!, password: String!): loginUser!
    signup(username: String!, password: String!): Message!
    addNode(type: nodeType!, nodeInfo: SSR! ): Message!
    createSubscribe(nodes: [Int], name: String!): Message!
    # Todo
    modifyNode(nodeID: Int, nodeInfo: SSR): Message!
    modifySubscribe(id:Int, name: String, nodes: [Int]): Message!
    getSubscribe(urlKey: String!): String!
    # cPassword(username: String!, oPassword: String!, nPassword: String ): Modify
    # dUser(username: String!): Modify!
}
